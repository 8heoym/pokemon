#!/bin/bash

# Ìè¨ÏºìÎ™¨ ÌîÑÎ°úÏ†ùÌä∏ Ï†ÑÏ≤¥ ÌÖåÏä§Ìä∏ Ïã§Ìñâ Ïä§ÌÅ¨Î¶ΩÌä∏

set -e

echo "üß™ Starting Pokemon Math Adventure Test Suite..."

# ÏÉâÍπî Ï†ïÏùò
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# ÌÖåÏä§Ìä∏ Í≤∞Í≥º Ï∂îÏ†Å
BACKEND_TESTS_PASSED=0
FRONTEND_TESTS_PASSED=0
E2E_TESTS_PASSED=0

echo "üìÇ Installing dependencies..."

# Root dependencies
if [ -f "package.json" ]; then
    echo "Installing root dependencies..."
    npm ci
fi

# Backend dependencies
echo "Installing backend dependencies..."
cd backend && npm ci && cd ..

# Frontend dependencies  
echo "Installing frontend dependencies..."
cd frontend && npm ci && cd ..

echo "üîß Running Backend Tests..."
cd backend

# Î∞±ÏóîÎìú ÌÉÄÏûÖ Ï≤¥ÌÅ¨
echo "Checking TypeScript compilation..."
if npm run build; then
    echo -e "${GREEN}‚úÖ Backend TypeScript compilation passed${NC}"
else
    echo -e "${RED}‚ùå Backend TypeScript compilation failed${NC}"
    exit 1
fi

# Î∞±ÏóîÎìú Îã®ÏúÑ ÌÖåÏä§Ìä∏
echo "Running backend unit tests..."
if npm test; then
    echo -e "${GREEN}‚úÖ Backend unit tests passed${NC}"
    BACKEND_TESTS_PASSED=1
else
    echo -e "${RED}‚ùå Backend unit tests failed${NC}"
fi

# Î∞±ÏóîÎìú ÌÜµÌï© ÌÖåÏä§Ìä∏
echo "Running backend integration tests..."
if npm run test:integration 2>/dev/null || echo "Integration tests not configured yet"; then
    echo -e "${GREEN}‚úÖ Backend integration tests passed${NC}"
else
    echo -e "${RED}‚ùå Backend integration tests failed${NC}"
fi

# Î∞±ÏóîÎìú Ïª§Î≤ÑÎ¶¨ÏßÄ
echo "Generating backend coverage report..."
npm run test:coverage

cd ..

echo "üé® Running Frontend Tests..."
cd frontend

# ÌîÑÎ°†Ìä∏ÏóîÎìú Î¶∞ÌåÖ
echo "Running frontend linting..."
if npm run lint; then
    echo -e "${GREEN}‚úÖ Frontend linting passed${NC}"
else
    echo -e "${RED}‚ùå Frontend linting failed${NC}"
fi

# ÌîÑÎ°†Ìä∏ÏóîÎìú ÌÉÄÏûÖ Ï≤¥ÌÅ¨
echo "Checking frontend TypeScript compilation..."
if npm run build; then
    echo -e "${GREEN}‚úÖ Frontend TypeScript compilation passed${NC}"
else
    echo -e "${RED}‚ùå Frontend TypeScript compilation failed${NC}"
    exit 1
fi

# ÌîÑÎ°†Ìä∏ÏóîÎìú ÌÖåÏä§Ìä∏
echo "Running frontend tests..."
if npm test; then
    echo -e "${GREEN}‚úÖ Frontend tests passed${NC}"
    FRONTEND_TESTS_PASSED=1
else
    echo -e "${RED}‚ùå Frontend tests failed${NC}"
fi

# ÌîÑÎ°†Ìä∏ÏóîÎìú Ïª§Î≤ÑÎ¶¨ÏßÄ
echo "Generating frontend coverage report..."
npm run test:coverage

cd ..

echo "üîÑ Running E2E Tests..."

# Playwright Î∏åÎùºÏö∞Ï†Ä ÏÑ§Ïπò
if command -v npx &> /dev/null; then
    echo "Installing Playwright browsers..."
    npx playwright install --with-deps
    
    echo "Starting servers and running E2E tests..."
    if npm run test:e2e; then
        echo -e "${GREEN}‚úÖ E2E tests passed${NC}"
        E2E_TESTS_PASSED=1
    else
        echo -e "${RED}‚ùå E2E tests failed${NC}"
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è  npx not found, skipping E2E tests${NC}"
fi

echo "üìä Test Results Summary:"
echo "========================"

if [ $BACKEND_TESTS_PASSED -eq 1 ]; then
    echo -e "Backend Tests: ${GREEN}‚úÖ PASSED${NC}"
else
    echo -e "Backend Tests: ${RED}‚ùå FAILED${NC}"
fi

if [ $FRONTEND_TESTS_PASSED -eq 1 ]; then
    echo -e "Frontend Tests: ${GREEN}‚úÖ PASSED${NC}"
else
    echo -e "Frontend Tests: ${RED}‚ùå FAILED${NC}"
fi

if [ $E2E_TESTS_PASSED -eq 1 ]; then
    echo -e "E2E Tests: ${GREEN}‚úÖ PASSED${NC}"
else
    echo -e "E2E Tests: ${RED}‚ùå FAILED${NC}"
fi

echo "========================"

# Ï†ÑÏ≤¥ Í≤∞Í≥º ÌåêÎã®
TOTAL_PASSED=$(($BACKEND_TESTS_PASSED + $FRONTEND_TESTS_PASSED + $E2E_TESTS_PASSED))

if [ $TOTAL_PASSED -eq 3 ]; then
    echo -e "${GREEN}üéâ All tests passed! Ready for deployment!${NC}"
    exit 0
elif [ $TOTAL_PASSED -ge 2 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Most tests passed, but some issues need attention${NC}"
    exit 1
else
    echo -e "${RED}üí• Multiple test failures detected. Please fix before continuing.${NC}"
    exit 1
fi